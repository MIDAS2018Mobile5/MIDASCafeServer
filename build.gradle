buildscript {
    ext {
        springBootVersion = '2.0.2.RELEASE'
        swaggerVersion = '2.7.0'
        pahoVersion = '1.1.1'
        queryDslPluginVersion = '1.0.9'
        lombokVersion = '3.3.0'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${queryDslPluginVersion}")
        classpath("io.franzbecker:gradle-lombok:${lombokVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.ewerk.gradle.plugins.querydsl" // Plugin 적용
apply plugin: "io.franzbecker.gradle-lombok"

def querydslSrcDir = 'src/main/generated' // QClass 생성 위치

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslSrcDir
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslSrcDir]
        }
    }
}

group = 'com.midas2018mobile5'
version = '1.0'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    provideRuntime
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-redis')
    compile('org.springframework.boot:spring-boot-starter-data-rest') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-data-json'
    }
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.session:spring-session-data-redis')
    compile("org.eclipse.paho:org.eclipse.paho.client.mqttv3:$pahoVersion")
    compile('com.google.code.gson:gson')
    compile("com.querydsl:querydsl-apt")
    compile("com.querydsl:querydsl-jpa")
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.7.0'
    compileOnly("org.springframework.boot:spring-boot-configuration-processor")
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('mysql:mysql-connector-java')
    compile('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}
